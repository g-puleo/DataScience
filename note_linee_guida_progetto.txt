PRINCIPI GUIDA:

(1) D.R.Y.   : DO NOT REPEAT YOURSELF: NON FARE MAI COPIAINCOLLA DI CODICE, COSTRUIRE CLASSI O FUNZIONI PER GENERALIZZARE
(2) K.I.S.S. : KEEP IT SIMPLE AND STUPID. SE QUALCOSA NON C'È, NON SI PUÒ ROMPERE ;). NON METTERE TROPPE COSE, NON VOGLIAMO GENERALIZZARE TUTTO, IL RISCHIO È QUELLO .

QUINDI CI VUOLE EQUILIBRIO, NON REINVENTARE LA RUOTA!  PRINCIPIO GUIDA: RISPARMIARE TEMPO, IL NOSTRO TEMPO
PENSARE CHE IL CODICE VERRÀ LETTO DA UN PAZZO PSICOPATICO CHE SA DOVE ABITI :)

COOKIECUTTER: JINJA2 FOR LIFE . 

i dati sono sacri: tieni una cartella con i dati puliti, senza ingiurie e cose imbarazzanti lol

 i notebook si usano solo per: esplorazione e presentazione. meglio usare script. 
 
 Più cose si automatizzano meglio è. Volendo si può automatizzare anche la scrittura di un report in latex 
 (tipo documentazione)
 
requisiti locali. specificare i pacchetti necessari da installare localmente. usare le conda image può essere comodo e mettere il corrispondente file delle conda image. se usiamo il python di sistema, si rischia di aggiungere pacchetti o aggiornarli e mandare a .... tutto.
docker volendo

ultima cosa: mettere un pacchetto python da import . Un pacchetto : è una Directory contenente un file chiamato __init.py__ più avanzato ma molto utile potenzialmente

Documentazione automatica: sphinx, volendo
usare make per rendere tutto riproducibile. 

esercizio: usare la cartella scaricata con cookiecutter l'altra volta. Installare nell'ambiente conda il pacchetto mnist, importare la pca da sklearn e (vedi esercizio tubiana su moodle)  . Una volta che abbiamo fatto tutto il notebook, provare a spezzettarlo, provarlo a spezzettarlo nelle varie funzioni che sono nel cookiecutter. Provare a fare un cookiecutter che scarichi i dati, faccia il preprocessing (whitening) , provare una riduzione di dimensionalità, e fare una regressione logistica per capire quanto ci si azzecca. 

 
